#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace project
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLThiTracNghiem")]
	public partial class QLThiTracNghiemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertKyThiThu(KyThiThu instance);
    partial void UpdateKyThiThu(KyThiThu instance);
    partial void DeleteKyThiThu(KyThiThu instance);
    partial void InsertLopHoc(LopHoc instance);
    partial void UpdateLopHoc(LopHoc instance);
    partial void DeleteLopHoc(LopHoc instance);
    partial void InsertKyThi(KyThi instance);
    partial void UpdateKyThi(KyThi instance);
    partial void DeleteKyThi(KyThi instance);
    partial void InsertKhoiLop(KhoiLop instance);
    partial void UpdateKhoiLop(KhoiLop instance);
    partial void DeleteKhoiLop(KhoiLop instance);
    partial void InsertKetQuaThiThu(KetQuaThiThu instance);
    partial void UpdateKetQuaThiThu(KetQuaThiThu instance);
    partial void DeleteKetQuaThiThu(KetQuaThiThu instance);
    partial void InsertKetQuaThi(KetQuaThi instance);
    partial void UpdateKetQuaThi(KetQuaThi instance);
    partial void DeleteKetQuaThi(KetQuaThi instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertHocSinh(HocSinh instance);
    partial void UpdateHocSinh(HocSinh instance);
    partial void DeleteHocSinh(HocSinh instance);
    partial void InsertDSHocSinh(DSHocSinh instance);
    partial void UpdateDSHocSinh(DSHocSinh instance);
    partial void DeleteDSHocSinh(DSHocSinh instance);
    partial void InsertDeThi(DeThi instance);
    partial void UpdateDeThi(DeThi instance);
    partial void DeleteDeThi(DeThi instance);
    partial void InsertDanhSachCauHoi(DanhSachCauHoi instance);
    partial void UpdateDanhSachCauHoi(DanhSachCauHoi instance);
    partial void DeleteDanhSachCauHoi(DanhSachCauHoi instance);
    partial void InsertCauHoiDongGop(CauHoiDongGop instance);
    partial void UpdateCauHoiDongGop(CauHoiDongGop instance);
    partial void DeleteCauHoiDongGop(CauHoiDongGop instance);
    partial void InsertCauHoi(CauHoi instance);
    partial void UpdateCauHoi(CauHoi instance);
    partial void DeleteCauHoi(CauHoi instance);
    #endregion
		
		public QLThiTracNghiemDataContext() : 
				base(global::project.Properties.Settings.Default.QLThiTracNghiemConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLThiTracNghiemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLThiTracNghiemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLThiTracNghiemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLThiTracNghiemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<KyThiThu> KyThiThus
		{
			get
			{
				return this.GetTable<KyThiThu>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc> LopHocs
		{
			get
			{
				return this.GetTable<LopHoc>();
			}
		}
		
		public System.Data.Linq.Table<KyThi> KyThis
		{
			get
			{
				return this.GetTable<KyThi>();
			}
		}
		
		public System.Data.Linq.Table<KhoiLop> KhoiLops
		{
			get
			{
				return this.GetTable<KhoiLop>();
			}
		}
		
		public System.Data.Linq.Table<KetQuaThiThu> KetQuaThiThus
		{
			get
			{
				return this.GetTable<KetQuaThiThu>();
			}
		}
		
		public System.Data.Linq.Table<KetQuaThi> KetQuaThis
		{
			get
			{
				return this.GetTable<KetQuaThi>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh> HocSinhs
		{
			get
			{
				return this.GetTable<HocSinh>();
			}
		}
		
		public System.Data.Linq.Table<DSHocSinh> DSHocSinhs
		{
			get
			{
				return this.GetTable<DSHocSinh>();
			}
		}
		
		public System.Data.Linq.Table<DeThi> DeThis
		{
			get
			{
				return this.GetTable<DeThi>();
			}
		}
		
		public System.Data.Linq.Table<DanhSachCauHoi> DanhSachCauHois
		{
			get
			{
				return this.GetTable<DanhSachCauHoi>();
			}
		}
		
		public System.Data.Linq.Table<CauHoiDongGop> CauHoiDongGops
		{
			get
			{
				return this.GetTable<CauHoiDongGop>();
			}
		}
		
		public System.Data.Linq.Table<CauHoi> CauHois
		{
			get
			{
				return this.GetTable<CauHoi>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _HoTen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(255)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ID_Account;
		
		private string _PassWord;
		
		private string _Type;
		
		private string _ID_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_AccountChanging(string value);
    partial void OnID_AccountChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnID_UserChanging(string value);
    partial void OnID_UserChanged();
    #endregion
		
		public TaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Account", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Account
		{
			get
			{
				return this._ID_Account;
			}
			set
			{
				if ((this._ID_Account != value))
				{
					this.OnID_AccountChanging(value);
					this.SendPropertyChanging();
					this._ID_Account = value;
					this.SendPropertyChanged("ID_Account");
					this.OnID_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(255)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(255)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_User", DbType="VarChar(255)")]
		public string ID_User
		{
			get
			{
				return this._ID_User;
			}
			set
			{
				if ((this._ID_User != value))
				{
					this.OnID_UserChanging(value);
					this.SendPropertyChanging();
					this._ID_User = value;
					this.SendPropertyChanged("ID_User");
					this.OnID_UserChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMH;
		
		private string _TenMH;
		
		private System.Nullable<int> _MaKhoi;
		
		private EntitySet<DeThi> _DeThis;
		
		private EntitySet<CauHoiDongGop> _CauHoiDongGops;
		
		private EntitySet<CauHoi> _CauHois;
		
		private EntityRef<KhoiLop> _KhoiLop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    partial void OnMaKhoiChanging(System.Nullable<int> value);
    partial void OnMaKhoiChanged();
    #endregion
		
		public MonHoc()
		{
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			this._CauHoiDongGops = new EntitySet<CauHoiDongGop>(new Action<CauHoiDongGop>(this.attach_CauHoiDongGops), new Action<CauHoiDongGop>(this.detach_CauHoiDongGops));
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			this._KhoiLop = default(EntityRef<KhoiLop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(255)")]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int")]
		public System.Nullable<int> MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._KhoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DeThi", Storage="_DeThis", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CauHoiDongGop", Storage="_CauHoiDongGops", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<CauHoiDongGop> CauHoiDongGops
		{
			get
			{
				return this._CauHoiDongGops;
			}
			set
			{
				this._CauHoiDongGops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CauHoi", Storage="_CauHois", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_MonHoc", Storage="_KhoiLop", ThisKey="MaKhoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public KhoiLop KhoiLop
		{
			get
			{
				return this._KhoiLop.Entity;
			}
			set
			{
				KhoiLop previousValue = this._KhoiLop.Entity;
				if (((previousValue != value) 
							|| (this._KhoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoiLop.Entity = null;
						previousValue.MonHocs.Remove(this);
					}
					this._KhoiLop.Entity = value;
					if ((value != null))
					{
						value.MonHocs.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhoiLop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_CauHoiDongGops(CauHoiDongGop entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_CauHoiDongGops(CauHoiDongGop entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KyThiThu")]
	public partial class KyThiThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _NgayThi;
		
		private System.Nullable<int> _MaDe;
		
		private System.Nullable<bool> _SuDung;
		
		private EntityRef<DeThi> _DeThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNgayThiChanging(string value);
    partial void OnNgayThiChanged();
    partial void OnMaDeChanging(System.Nullable<int> value);
    partial void OnMaDeChanged();
    partial void OnSuDungChanging(System.Nullable<bool> value);
    partial void OnSuDungChanged();
    #endregion
		
		public KyThiThu()
		{
			this._DeThi = default(EntityRef<DeThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="NChar(10)")]
		public string NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="Int")]
		public System.Nullable<int> MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuDung", DbType="Bit")]
		public System.Nullable<bool> SuDung
		{
			get
			{
				return this._SuDung;
			}
			set
			{
				if ((this._SuDung != value))
				{
					this.OnSuDungChanging(value);
					this.SendPropertyChanging();
					this._SuDung = value;
					this.SendPropertyChanged("SuDung");
					this.OnSuDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_KyThiThu", Storage="_DeThi", ThisKey="MaDe", OtherKey="ID", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.KyThiThus.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.KyThiThus.Add(this);
						this._MaDe = value.ID;
					}
					else
					{
						this._MaDe = default(Nullable<int>);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
	public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLop;
		
		private EntitySet<HocSinh> _HocSinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    #endregion
		
		public LopHoc()
		{
			this._HocSinhs = new EntitySet<HocSinh>(new Action<HocSinh>(this.attach_HocSinhs), new Action<HocSinh>(this.detach_HocSinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(255)")]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_HocSinh", Storage="_HocSinhs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<HocSinh> HocSinhs
		{
			get
			{
				return this._HocSinhs;
			}
			set
			{
				this._HocSinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KyThi")]
	public partial class KyThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _NgayThi;
		
		private System.Nullable<int> _MaDe;
		
		private System.Nullable<bool> _SuDung;
		
		private EntityRef<DeThi> _DeThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNgayThiChanging(string value);
    partial void OnNgayThiChanged();
    partial void OnMaDeChanging(System.Nullable<int> value);
    partial void OnMaDeChanged();
    partial void OnSuDungChanging(System.Nullable<bool> value);
    partial void OnSuDungChanged();
    #endregion
		
		public KyThi()
		{
			this._DeThi = default(EntityRef<DeThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="NChar(10)")]
		public string NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="Int")]
		public System.Nullable<int> MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuDung", DbType="Bit")]
		public System.Nullable<bool> SuDung
		{
			get
			{
				return this._SuDung;
			}
			set
			{
				if ((this._SuDung != value))
				{
					this.OnSuDungChanging(value);
					this.SendPropertyChanging();
					this._SuDung = value;
					this.SendPropertyChanged("SuDung");
					this.OnSuDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_KyThi", Storage="_DeThi", ThisKey="MaDe", OtherKey="ID", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.KyThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.KyThis.Add(this);
						this._MaDe = value.ID;
					}
					else
					{
						this._MaDe = default(Nullable<int>);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoiLop")]
	public partial class KhoiLop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhoi;
		
		private string _TenKhoi;
		
		private EntitySet<MonHoc> _MonHocs;
		
		private EntitySet<HocSinh> _HocSinhs;
		
		private EntitySet<DeThi> _DeThis;
		
		private EntitySet<CauHoiDongGop> _CauHoiDongGops;
		
		private EntitySet<CauHoi> _CauHois;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoiChanging(int value);
    partial void OnMaKhoiChanged();
    partial void OnTenKhoiChanging(string value);
    partial void OnTenKhoiChanged();
    #endregion
		
		public KhoiLop()
		{
			this._MonHocs = new EntitySet<MonHoc>(new Action<MonHoc>(this.attach_MonHocs), new Action<MonHoc>(this.detach_MonHocs));
			this._HocSinhs = new EntitySet<HocSinh>(new Action<HocSinh>(this.attach_HocSinhs), new Action<HocSinh>(this.detach_HocSinhs));
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			this._CauHoiDongGops = new EntitySet<CauHoiDongGop>(new Action<CauHoiDongGop>(this.attach_CauHoiDongGops), new Action<CauHoiDongGop>(this.detach_CauHoiDongGops));
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoi", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenKhoi
		{
			get
			{
				return this._TenKhoi;
			}
			set
			{
				if ((this._TenKhoi != value))
				{
					this.OnTenKhoiChanging(value);
					this.SendPropertyChanging();
					this._TenKhoi = value;
					this.SendPropertyChanged("TenKhoi");
					this.OnTenKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_MonHoc", Storage="_MonHocs", ThisKey="MaKhoi", OtherKey="MaKhoi")]
		public EntitySet<MonHoc> MonHocs
		{
			get
			{
				return this._MonHocs;
			}
			set
			{
				this._MonHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_HocSinh", Storage="_HocSinhs", ThisKey="MaKhoi", OtherKey="MaKhoi")]
		public EntitySet<HocSinh> HocSinhs
		{
			get
			{
				return this._HocSinhs;
			}
			set
			{
				this._HocSinhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_DeThi", Storage="_DeThis", ThisKey="MaKhoi", OtherKey="MaKhoi")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_CauHoiDongGop", Storage="_CauHoiDongGops", ThisKey="MaKhoi", OtherKey="Khoi")]
		public EntitySet<CauHoiDongGop> CauHoiDongGops
		{
			get
			{
				return this._CauHoiDongGops;
			}
			set
			{
				this._CauHoiDongGops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_CauHoi", Storage="_CauHois", ThisKey="MaKhoi", OtherKey="Khoi")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MonHocs(MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = this;
		}
		
		private void detach_MonHocs(MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = null;
		}
		
		private void attach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = this;
		}
		
		private void detach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = null;
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = null;
		}
		
		private void attach_CauHoiDongGops(CauHoiDongGop entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = this;
		}
		
		private void detach_CauHoiDongGops(CauHoiDongGop entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = null;
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.KhoiLop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KetQuaThiThu")]
	public partial class KetQuaThiThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaHS;
		
		private string _SoCauDung;
		
		private string _SoCauSai;
		
		private string _DiemThi;
		
		private string _NgayThi;
		
		private string _ID_Account;
		
		private string _KyThi;
		
		private EntityRef<DSHocSinh> _DSHocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnSoCauDungChanging(string value);
    partial void OnSoCauDungChanged();
    partial void OnSoCauSaiChanging(string value);
    partial void OnSoCauSaiChanged();
    partial void OnDiemThiChanging(string value);
    partial void OnDiemThiChanged();
    partial void OnNgayThiChanging(string value);
    partial void OnNgayThiChanged();
    partial void OnID_AccountChanging(string value);
    partial void OnID_AccountChanged();
    partial void OnKyThiChanging(string value);
    partial void OnKyThiChanged();
    #endregion
		
		public KetQuaThiThu()
		{
			this._DSHocSinh = default(EntityRef<DSHocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="VarChar(255)")]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._DSHocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCauDung", DbType="NVarChar(255)")]
		public string SoCauDung
		{
			get
			{
				return this._SoCauDung;
			}
			set
			{
				if ((this._SoCauDung != value))
				{
					this.OnSoCauDungChanging(value);
					this.SendPropertyChanging();
					this._SoCauDung = value;
					this.SendPropertyChanged("SoCauDung");
					this.OnSoCauDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCauSai", DbType="NVarChar(255)")]
		public string SoCauSai
		{
			get
			{
				return this._SoCauSai;
			}
			set
			{
				if ((this._SoCauSai != value))
				{
					this.OnSoCauSaiChanging(value);
					this.SendPropertyChanging();
					this._SoCauSai = value;
					this.SendPropertyChanged("SoCauSai");
					this.OnSoCauSaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemThi", DbType="VarChar(255)")]
		public string DiemThi
		{
			get
			{
				return this._DiemThi;
			}
			set
			{
				if ((this._DiemThi != value))
				{
					this.OnDiemThiChanging(value);
					this.SendPropertyChanging();
					this._DiemThi = value;
					this.SendPropertyChanged("DiemThi");
					this.OnDiemThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="NChar(10)")]
		public string NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Account", DbType="NVarChar(255)")]
		public string ID_Account
		{
			get
			{
				return this._ID_Account;
			}
			set
			{
				if ((this._ID_Account != value))
				{
					this.OnID_AccountChanging(value);
					this.SendPropertyChanging();
					this._ID_Account = value;
					this.SendPropertyChanged("ID_Account");
					this.OnID_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KyThi", DbType="VarChar(255)")]
		public string KyThi
		{
			get
			{
				return this._KyThi;
			}
			set
			{
				if ((this._KyThi != value))
				{
					if (this._DSHocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKyThiChanging(value);
					this.SendPropertyChanging();
					this._KyThi = value;
					this.SendPropertyChanged("KyThi");
					this.OnKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSHocSinh_KetQuaThiThu", Storage="_DSHocSinh", ThisKey="KyThi,MaHS", OtherKey="MaKiThi,MaHS", IsForeignKey=true)]
		public DSHocSinh DSHocSinh
		{
			get
			{
				return this._DSHocSinh.Entity;
			}
			set
			{
				DSHocSinh previousValue = this._DSHocSinh.Entity;
				if (((previousValue != value) 
							|| (this._DSHocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DSHocSinh.Entity = null;
						previousValue.KetQuaThiThus.Remove(this);
					}
					this._DSHocSinh.Entity = value;
					if ((value != null))
					{
						value.KetQuaThiThus.Add(this);
						this._KyThi = value.MaKiThi;
						this._MaHS = value.MaHS;
					}
					else
					{
						this._KyThi = default(string);
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("DSHocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KetQuaThi")]
	public partial class KetQuaThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaHS;
		
		private string _SoCauDung;
		
		private string _SoCauSai;
		
		private string _DiemThi;
		
		private string _NgayThi;
		
		private string _ID_Account;
		
		private string _KyThi;
		
		private EntityRef<DSHocSinh> _DSHocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnSoCauDungChanging(string value);
    partial void OnSoCauDungChanged();
    partial void OnSoCauSaiChanging(string value);
    partial void OnSoCauSaiChanged();
    partial void OnDiemThiChanging(string value);
    partial void OnDiemThiChanged();
    partial void OnNgayThiChanging(string value);
    partial void OnNgayThiChanged();
    partial void OnID_AccountChanging(string value);
    partial void OnID_AccountChanged();
    partial void OnKyThiChanging(string value);
    partial void OnKyThiChanged();
    #endregion
		
		public KetQuaThi()
		{
			this._DSHocSinh = default(EntityRef<DSHocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="VarChar(255)")]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._DSHocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCauDung", DbType="NVarChar(255)")]
		public string SoCauDung
		{
			get
			{
				return this._SoCauDung;
			}
			set
			{
				if ((this._SoCauDung != value))
				{
					this.OnSoCauDungChanging(value);
					this.SendPropertyChanging();
					this._SoCauDung = value;
					this.SendPropertyChanged("SoCauDung");
					this.OnSoCauDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCauSai", DbType="NVarChar(255)")]
		public string SoCauSai
		{
			get
			{
				return this._SoCauSai;
			}
			set
			{
				if ((this._SoCauSai != value))
				{
					this.OnSoCauSaiChanging(value);
					this.SendPropertyChanging();
					this._SoCauSai = value;
					this.SendPropertyChanged("SoCauSai");
					this.OnSoCauSaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemThi", DbType="NVarChar(255)")]
		public string DiemThi
		{
			get
			{
				return this._DiemThi;
			}
			set
			{
				if ((this._DiemThi != value))
				{
					this.OnDiemThiChanging(value);
					this.SendPropertyChanging();
					this._DiemThi = value;
					this.SendPropertyChanged("DiemThi");
					this.OnDiemThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="NChar(10)")]
		public string NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Account", DbType="NVarChar(255)")]
		public string ID_Account
		{
			get
			{
				return this._ID_Account;
			}
			set
			{
				if ((this._ID_Account != value))
				{
					this.OnID_AccountChanging(value);
					this.SendPropertyChanging();
					this._ID_Account = value;
					this.SendPropertyChanged("ID_Account");
					this.OnID_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KyThi", DbType="VarChar(255)")]
		public string KyThi
		{
			get
			{
				return this._KyThi;
			}
			set
			{
				if ((this._KyThi != value))
				{
					if (this._DSHocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKyThiChanging(value);
					this.SendPropertyChanging();
					this._KyThi = value;
					this.SendPropertyChanged("KyThi");
					this.OnKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSHocSinh_KetQuaThi", Storage="_DSHocSinh", ThisKey="KyThi,MaHS", OtherKey="MaKiThi,MaHS", IsForeignKey=true)]
		public DSHocSinh DSHocSinh
		{
			get
			{
				return this._DSHocSinh.Entity;
			}
			set
			{
				DSHocSinh previousValue = this._DSHocSinh.Entity;
				if (((previousValue != value) 
							|| (this._DSHocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DSHocSinh.Entity = null;
						previousValue.KetQuaThis.Remove(this);
					}
					this._DSHocSinh.Entity = value;
					if ((value != null))
					{
						value.KetQuaThis.Add(this);
						this._KyThi = value.MaKiThi;
						this._MaHS = value.MaHS;
					}
					else
					{
						this._KyThi = default(string);
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("DSHocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _HoTen;
		
		private string _NgaySinh;
		
		private string _DienThoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(string value);
    partial void OnNgaySinhChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    #endregion
		
		public GiaoVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(255)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="NChar(10)")]
		public string NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(255)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh")]
	public partial class HocSinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHS;
		
		private string _HoTen;
		
		private string _NgaySinh;
		
		private string _MaLop;
		
		private System.Nullable<int> _MaKhoi;
		
		private string _DienThoai;
		
		private EntitySet<DSHocSinh> _DSHocSinhs;
		
		private EntitySet<CauHoiDongGop> _CauHoiDongGops;
		
		private EntityRef<KhoiLop> _KhoiLop;
		
		private EntityRef<LopHoc> _LopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(string value);
    partial void OnNgaySinhChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaKhoiChanging(System.Nullable<int> value);
    partial void OnMaKhoiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    #endregion
		
		public HocSinh()
		{
			this._DSHocSinhs = new EntitySet<DSHocSinh>(new Action<DSHocSinh>(this.attach_DSHocSinhs), new Action<DSHocSinh>(this.detach_DSHocSinhs));
			this._CauHoiDongGops = new EntitySet<CauHoiDongGop>(new Action<CauHoiDongGop>(this.attach_CauHoiDongGops), new Action<CauHoiDongGop>(this.detach_CauHoiDongGops));
			this._KhoiLop = default(EntityRef<KhoiLop>);
			this._LopHoc = default(EntityRef<LopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(255)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="NChar(10)")]
		public string NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NVarChar(255)")]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int")]
		public System.Nullable<int> MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._KhoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(255)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DSHocSinh", Storage="_DSHocSinhs", ThisKey="MaHS", OtherKey="MaHS")]
		public EntitySet<DSHocSinh> DSHocSinhs
		{
			get
			{
				return this._DSHocSinhs;
			}
			set
			{
				this._DSHocSinhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_CauHoiDongGop", Storage="_CauHoiDongGops", ThisKey="MaHS", OtherKey="IDHS")]
		public EntitySet<CauHoiDongGop> CauHoiDongGops
		{
			get
			{
				return this._CauHoiDongGops;
			}
			set
			{
				this._CauHoiDongGops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_HocSinh", Storage="_KhoiLop", ThisKey="MaKhoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public KhoiLop KhoiLop
		{
			get
			{
				return this._KhoiLop.Entity;
			}
			set
			{
				KhoiLop previousValue = this._KhoiLop.Entity;
				if (((previousValue != value) 
							|| (this._KhoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoiLop.Entity = null;
						previousValue.HocSinhs.Remove(this);
					}
					this._KhoiLop.Entity = value;
					if ((value != null))
					{
						value.HocSinhs.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhoiLop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_HocSinh", Storage="_LopHoc", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.HocSinhs.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.HocSinhs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DSHocSinhs(DSHocSinh entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_DSHocSinhs(DSHocSinh entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
		
		private void attach_CauHoiDongGops(CauHoiDongGop entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_CauHoiDongGops(CauHoiDongGop entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DSHocSinh")]
	public partial class DSHocSinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKiThi;
		
		private string _MaHS;
		
		private string _ID_Account;
		
		private EntitySet<KetQuaThiThu> _KetQuaThiThus;
		
		private EntitySet<KetQuaThi> _KetQuaThis;
		
		private EntityRef<HocSinh> _HocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKiThiChanging(string value);
    partial void OnMaKiThiChanged();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnID_AccountChanging(string value);
    partial void OnID_AccountChanged();
    #endregion
		
		public DSHocSinh()
		{
			this._KetQuaThiThus = new EntitySet<KetQuaThiThu>(new Action<KetQuaThiThu>(this.attach_KetQuaThiThus), new Action<KetQuaThiThu>(this.detach_KetQuaThiThus));
			this._KetQuaThis = new EntitySet<KetQuaThi>(new Action<KetQuaThi>(this.attach_KetQuaThis), new Action<KetQuaThi>(this.detach_KetQuaThis));
			this._HocSinh = default(EntityRef<HocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKiThi", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKiThi
		{
			get
			{
				return this._MaKiThi;
			}
			set
			{
				if ((this._MaKiThi != value))
				{
					this.OnMaKiThiChanging(value);
					this.SendPropertyChanging();
					this._MaKiThi = value;
					this.SendPropertyChanged("MaKiThi");
					this.OnMaKiThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Account", DbType="NVarChar(255)")]
		public string ID_Account
		{
			get
			{
				return this._ID_Account;
			}
			set
			{
				if ((this._ID_Account != value))
				{
					this.OnID_AccountChanging(value);
					this.SendPropertyChanging();
					this._ID_Account = value;
					this.SendPropertyChanged("ID_Account");
					this.OnID_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSHocSinh_KetQuaThiThu", Storage="_KetQuaThiThus", ThisKey="MaKiThi,MaHS", OtherKey="KyThi,MaHS")]
		public EntitySet<KetQuaThiThu> KetQuaThiThus
		{
			get
			{
				return this._KetQuaThiThus;
			}
			set
			{
				this._KetQuaThiThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DSHocSinh_KetQuaThi", Storage="_KetQuaThis", ThisKey="MaKiThi,MaHS", OtherKey="KyThi,MaHS")]
		public EntitySet<KetQuaThi> KetQuaThis
		{
			get
			{
				return this._KetQuaThis;
			}
			set
			{
				this._KetQuaThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DSHocSinh", Storage="_HocSinh", ThisKey="MaHS", OtherKey="MaHS", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.DSHocSinhs.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.DSHocSinhs.Add(this);
						this._MaHS = value.MaHS;
					}
					else
					{
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KetQuaThiThus(KetQuaThiThu entity)
		{
			this.SendPropertyChanging();
			entity.DSHocSinh = this;
		}
		
		private void detach_KetQuaThiThus(KetQuaThiThu entity)
		{
			this.SendPropertyChanging();
			entity.DSHocSinh = null;
		}
		
		private void attach_KetQuaThis(KetQuaThi entity)
		{
			this.SendPropertyChanging();
			entity.DSHocSinh = this;
		}
		
		private void detach_KetQuaThis(KetQuaThi entity)
		{
			this.SendPropertyChanging();
			entity.DSHocSinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeThi")]
	public partial class DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenDeThi;
		
		private string _MaMH;
		
		private System.Nullable<int> _MaKhoi;
		
		private EntitySet<KyThiThu> _KyThiThus;
		
		private EntitySet<KyThi> _KyThis;
		
		private EntityRef<KhoiLop> _KhoiLop;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenDeThiChanging(string value);
    partial void OnTenDeThiChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnMaKhoiChanging(System.Nullable<int> value);
    partial void OnMaKhoiChanged();
    #endregion
		
		public DeThi()
		{
			this._KyThiThus = new EntitySet<KyThiThu>(new Action<KyThiThu>(this.attach_KyThiThus), new Action<KyThiThu>(this.detach_KyThiThus));
			this._KyThis = new EntitySet<KyThi>(new Action<KyThi>(this.attach_KyThis), new Action<KyThi>(this.detach_KyThis));
			this._KhoiLop = default(EntityRef<KhoiLop>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDeThi", DbType="NVarChar(255)")]
		public string TenDeThi
		{
			get
			{
				return this._TenDeThi;
			}
			set
			{
				if ((this._TenDeThi != value))
				{
					this.OnTenDeThiChanging(value);
					this.SendPropertyChanging();
					this._TenDeThi = value;
					this.SendPropertyChanged("TenDeThi");
					this.OnTenDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="VarChar(255)")]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int")]
		public System.Nullable<int> MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._KhoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_KyThiThu", Storage="_KyThiThus", ThisKey="ID", OtherKey="MaDe")]
		public EntitySet<KyThiThu> KyThiThus
		{
			get
			{
				return this._KyThiThus;
			}
			set
			{
				this._KyThiThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_KyThi", Storage="_KyThis", ThisKey="ID", OtherKey="MaDe")]
		public EntitySet<KyThi> KyThis
		{
			get
			{
				return this._KyThis;
			}
			set
			{
				this._KyThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_DeThi", Storage="_KhoiLop", ThisKey="MaKhoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public KhoiLop KhoiLop
		{
			get
			{
				return this._KhoiLop.Entity;
			}
			set
			{
				KhoiLop previousValue = this._KhoiLop.Entity;
				if (((previousValue != value) 
							|| (this._KhoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoiLop.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._KhoiLop.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhoiLop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DeThi", Storage="_MonHoc", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KyThiThus(KyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_KyThiThus(KyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_KyThis(KyThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_KyThis(KyThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhSachCauHoi")]
	public partial class DanhSachCauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDe;
		
		private int _ID_Cauhoi;
		
		private EntityRef<CauHoi> _CauHoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeChanging(int value);
    partial void OnMaDeChanged();
    partial void OnID_CauhoiChanging(int value);
    partial void OnID_CauhoiChanged();
    #endregion
		
		public DanhSachCauHoi()
		{
			this._CauHoi = default(EntityRef<CauHoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cauhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Cauhoi
		{
			get
			{
				return this._ID_Cauhoi;
			}
			set
			{
				if ((this._ID_Cauhoi != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CauhoiChanging(value);
					this.SendPropertyChanging();
					this._ID_Cauhoi = value;
					this.SendPropertyChanged("ID_Cauhoi");
					this.OnID_CauhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_DanhSachCauHoi", Storage="_CauHoi", ThisKey="ID_Cauhoi", OtherKey="ID", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.DanhSachCauHois.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.DanhSachCauHois.Add(this);
						this._ID_Cauhoi = value.ID;
					}
					else
					{
						this._ID_Cauhoi = default(int);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoiDongGop")]
	public partial class CauHoiDongGop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IDHS;
		
		private string _CauHoi;
		
		private string _DapAn_A;
		
		private string _DapAn_B;
		
		private string _DapAn_C;
		
		private string _DapAn_D;
		
		private string _KetQua;
		
		private System.Nullable<int> _Khoi;
		
		private System.Nullable<bool> _Duyet;
		
		private string _DoKho;
		
		private string _MaMH;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<KhoiLop> _KhoiLop;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDHSChanging(string value);
    partial void OnIDHSChanged();
    partial void OnCauHoiChanging(string value);
    partial void OnCauHoiChanged();
    partial void OnDapAn_AChanging(string value);
    partial void OnDapAn_AChanged();
    partial void OnDapAn_BChanging(string value);
    partial void OnDapAn_BChanged();
    partial void OnDapAn_CChanging(string value);
    partial void OnDapAn_CChanged();
    partial void OnDapAn_DChanging(string value);
    partial void OnDapAn_DChanged();
    partial void OnKetQuaChanging(string value);
    partial void OnKetQuaChanged();
    partial void OnKhoiChanging(System.Nullable<int> value);
    partial void OnKhoiChanged();
    partial void OnDuyetChanging(System.Nullable<bool> value);
    partial void OnDuyetChanged();
    partial void OnDoKhoChanging(string value);
    partial void OnDoKhoChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    #endregion
		
		public CauHoiDongGop()
		{
			this._HocSinh = default(EntityRef<HocSinh>);
			this._KhoiLop = default(EntityRef<KhoiLop>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHS", DbType="VarChar(255)")]
		public string IDHS
		{
			get
			{
				return this._IDHS;
			}
			set
			{
				if ((this._IDHS != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHSChanging(value);
					this.SendPropertyChanging();
					this._IDHS = value;
					this.SendPropertyChanged("IDHS");
					this.OnIDHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauHoi", DbType="NVarChar(255)")]
		public string CauHoi
		{
			get
			{
				return this._CauHoi;
			}
			set
			{
				if ((this._CauHoi != value))
				{
					this.OnCauHoiChanging(value);
					this.SendPropertyChanging();
					this._CauHoi = value;
					this.SendPropertyChanged("CauHoi");
					this.OnCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn_A", DbType="NVarChar(255)")]
		public string DapAn_A
		{
			get
			{
				return this._DapAn_A;
			}
			set
			{
				if ((this._DapAn_A != value))
				{
					this.OnDapAn_AChanging(value);
					this.SendPropertyChanging();
					this._DapAn_A = value;
					this.SendPropertyChanged("DapAn_A");
					this.OnDapAn_AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn_B", DbType="NVarChar(255)")]
		public string DapAn_B
		{
			get
			{
				return this._DapAn_B;
			}
			set
			{
				if ((this._DapAn_B != value))
				{
					this.OnDapAn_BChanging(value);
					this.SendPropertyChanging();
					this._DapAn_B = value;
					this.SendPropertyChanged("DapAn_B");
					this.OnDapAn_BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn_C", DbType="NVarChar(255)")]
		public string DapAn_C
		{
			get
			{
				return this._DapAn_C;
			}
			set
			{
				if ((this._DapAn_C != value))
				{
					this.OnDapAn_CChanging(value);
					this.SendPropertyChanging();
					this._DapAn_C = value;
					this.SendPropertyChanged("DapAn_C");
					this.OnDapAn_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn_D", DbType="NVarChar(255)")]
		public string DapAn_D
		{
			get
			{
				return this._DapAn_D;
			}
			set
			{
				if ((this._DapAn_D != value))
				{
					this.OnDapAn_DChanging(value);
					this.SendPropertyChanging();
					this._DapAn_D = value;
					this.SendPropertyChanged("DapAn_D");
					this.OnDapAn_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KetQua", DbType="NVarChar(255)")]
		public string KetQua
		{
			get
			{
				return this._KetQua;
			}
			set
			{
				if ((this._KetQua != value))
				{
					this.OnKetQuaChanging(value);
					this.SendPropertyChanging();
					this._KetQua = value;
					this.SendPropertyChanged("KetQua");
					this.OnKetQuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int")]
		public System.Nullable<int> Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					if (this._KhoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duyet", DbType="Bit")]
		public System.Nullable<bool> Duyet
		{
			get
			{
				return this._Duyet;
			}
			set
			{
				if ((this._Duyet != value))
				{
					this.OnDuyetChanging(value);
					this.SendPropertyChanging();
					this._Duyet = value;
					this.SendPropertyChanged("Duyet");
					this.OnDuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoKho", DbType="NVarChar(255)")]
		public string DoKho
		{
			get
			{
				return this._DoKho;
			}
			set
			{
				if ((this._DoKho != value))
				{
					this.OnDoKhoChanging(value);
					this.SendPropertyChanging();
					this._DoKho = value;
					this.SendPropertyChanged("DoKho");
					this.OnDoKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="VarChar(255)")]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_CauHoiDongGop", Storage="_HocSinh", ThisKey="IDHS", OtherKey="MaHS", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.CauHoiDongGops.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.CauHoiDongGops.Add(this);
						this._IDHS = value.MaHS;
					}
					else
					{
						this._IDHS = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_CauHoiDongGop", Storage="_KhoiLop", ThisKey="Khoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public KhoiLop KhoiLop
		{
			get
			{
				return this._KhoiLop.Entity;
			}
			set
			{
				KhoiLop previousValue = this._KhoiLop.Entity;
				if (((previousValue != value) 
							|| (this._KhoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoiLop.Entity = null;
						previousValue.CauHoiDongGops.Remove(this);
					}
					this._KhoiLop.Entity = value;
					if ((value != null))
					{
						value.CauHoiDongGops.Add(this);
						this._Khoi = value.MaKhoi;
					}
					else
					{
						this._Khoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhoiLop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CauHoiDongGop", Storage="_MonHoc", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.CauHoiDongGops.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.CauHoiDongGops.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoi")]
	public partial class CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CauHoi1;
		
		private string _DapAn_A;
		
		private string _DapAn_B;
		
		private string _DapAn_C;
		
		private string _DapAn_D;
		
		private System.Nullable<char> _DapAnDung;
		
		private System.Nullable<int> _Khoi;
		
		private string _DoKho;
		
		private string _MaMH;
		
		private EntitySet<DanhSachCauHoi> _DanhSachCauHois;
		
		private EntityRef<KhoiLop> _KhoiLop;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCauHoi1Changing(string value);
    partial void OnCauHoi1Changed();
    partial void OnDapAn_AChanging(string value);
    partial void OnDapAn_AChanged();
    partial void OnDapAn_BChanging(string value);
    partial void OnDapAn_BChanged();
    partial void OnDapAn_CChanging(string value);
    partial void OnDapAn_CChanged();
    partial void OnDapAn_DChanging(string value);
    partial void OnDapAn_DChanged();
    partial void OnDapAnDungChanging(System.Nullable<char> value);
    partial void OnDapAnDungChanged();
    partial void OnKhoiChanging(System.Nullable<int> value);
    partial void OnKhoiChanged();
    partial void OnDoKhoChanging(string value);
    partial void OnDoKhoChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    #endregion
		
		public CauHoi()
		{
			this._DanhSachCauHois = new EntitySet<DanhSachCauHoi>(new Action<DanhSachCauHoi>(this.attach_DanhSachCauHois), new Action<DanhSachCauHoi>(this.detach_DanhSachCauHois));
			this._KhoiLop = default(EntityRef<KhoiLop>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CauHoi", Storage="_CauHoi1", DbType="NVarChar(255)")]
		public string CauHoi1
		{
			get
			{
				return this._CauHoi1;
			}
			set
			{
				if ((this._CauHoi1 != value))
				{
					this.OnCauHoi1Changing(value);
					this.SendPropertyChanging();
					this._CauHoi1 = value;
					this.SendPropertyChanged("CauHoi1");
					this.OnCauHoi1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn_A", DbType="NVarChar(255)")]
		public string DapAn_A
		{
			get
			{
				return this._DapAn_A;
			}
			set
			{
				if ((this._DapAn_A != value))
				{
					this.OnDapAn_AChanging(value);
					this.SendPropertyChanging();
					this._DapAn_A = value;
					this.SendPropertyChanged("DapAn_A");
					this.OnDapAn_AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn_B", DbType="NVarChar(255)")]
		public string DapAn_B
		{
			get
			{
				return this._DapAn_B;
			}
			set
			{
				if ((this._DapAn_B != value))
				{
					this.OnDapAn_BChanging(value);
					this.SendPropertyChanging();
					this._DapAn_B = value;
					this.SendPropertyChanged("DapAn_B");
					this.OnDapAn_BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn_C", DbType="NVarChar(255)")]
		public string DapAn_C
		{
			get
			{
				return this._DapAn_C;
			}
			set
			{
				if ((this._DapAn_C != value))
				{
					this.OnDapAn_CChanging(value);
					this.SendPropertyChanging();
					this._DapAn_C = value;
					this.SendPropertyChanged("DapAn_C");
					this.OnDapAn_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn_D", DbType="NVarChar(255)")]
		public string DapAn_D
		{
			get
			{
				return this._DapAn_D;
			}
			set
			{
				if ((this._DapAn_D != value))
				{
					this.OnDapAn_DChanging(value);
					this.SendPropertyChanging();
					this._DapAn_D = value;
					this.SendPropertyChanged("DapAn_D");
					this.OnDapAn_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnDung", DbType="NChar(1)")]
		public System.Nullable<char> DapAnDung
		{
			get
			{
				return this._DapAnDung;
			}
			set
			{
				if ((this._DapAnDung != value))
				{
					this.OnDapAnDungChanging(value);
					this.SendPropertyChanging();
					this._DapAnDung = value;
					this.SendPropertyChanged("DapAnDung");
					this.OnDapAnDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoi", DbType="Int")]
		public System.Nullable<int> Khoi
		{
			get
			{
				return this._Khoi;
			}
			set
			{
				if ((this._Khoi != value))
				{
					if (this._KhoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhoiChanging(value);
					this.SendPropertyChanging();
					this._Khoi = value;
					this.SendPropertyChanged("Khoi");
					this.OnKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoKho", DbType="NVarChar(255)")]
		public string DoKho
		{
			get
			{
				return this._DoKho;
			}
			set
			{
				if ((this._DoKho != value))
				{
					this.OnDoKhoChanging(value);
					this.SendPropertyChanging();
					this._DoKho = value;
					this.SendPropertyChanged("DoKho");
					this.OnDoKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="VarChar(255)")]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_DanhSachCauHoi", Storage="_DanhSachCauHois", ThisKey="ID", OtherKey="ID_Cauhoi")]
		public EntitySet<DanhSachCauHoi> DanhSachCauHois
		{
			get
			{
				return this._DanhSachCauHois;
			}
			set
			{
				this._DanhSachCauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoiLop_CauHoi", Storage="_KhoiLop", ThisKey="Khoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public KhoiLop KhoiLop
		{
			get
			{
				return this._KhoiLop.Entity;
			}
			set
			{
				KhoiLop previousValue = this._KhoiLop.Entity;
				if (((previousValue != value) 
							|| (this._KhoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoiLop.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._KhoiLop.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._Khoi = value.MaKhoi;
					}
					else
					{
						this._Khoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhoiLop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_CauHoi", Storage="_MonHoc", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachCauHois(DanhSachCauHoi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_DanhSachCauHois(DanhSachCauHoi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
	}
}
#pragma warning restore 1591
